{"version":3,"sources":["Components/Section/Section.module.css","Components/ContactItem/ContactItem.module.css","Components/Filter/Filter.module.css","Components/TotalNumber/TotalNumber.module.css","Components/ContactsList/ContactList.module.css","Components/Loader/Loader.module.css","App.module.css","Components/Form/Form.module.css","Components/ContactItem/ContactItem.js","Components/Loader/Loader.js","redux/contacts-actions.js","redux/contacts-operations.js","redux/contacts-selectors.js","Components/ContactsList/ContactsList.js","Components/Form/Form.js","Components/Filter/Filter.js","Components/TotalNumber/TotalNumber.js","Components/Section/Section.js","App.js","redux/contacts-reducer.js","redux/store.js","index.js"],"names":["module","exports","ContactItem","name","number","deleteContact","className","s","item","button","onClick","LoaderPage","loader","type","color","height","width","timeout","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","getContacts","state","contacts","items","getFilter","filter","getIsLoading","isLoading","filteredContacts","console","log","normalizedContact","toLowerCase","includes","ContactsList","contactsByFilter","useSelector","loadingContacts","dispatch","useDispatch","useEffect","get","then","data","catch","error","onDeleteContact","id","delete","Loader","length","list","map","Form","useState","setName","setNumber","handleChange","event","target","value","handleSubmit","preventDefault","sameName","existName","nameHandler","find","existNameHandler","contact","alert","post","addContact","onSubmit","label","htmlFor","input","onChange","placeholder","required","Filter","contactsActions","connect","total","wrap","Section","title","children","section","App","container","createReducer","_","payload","loading","combineReducers","middleware","getDefaultMiddleware","logger","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df1c7b7b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3V4Ii\",\"title\":\"Section_title__2qJ0O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__a1ZNu\",\"button\":\"ContactItem_button__3g97R\",\"ani9\":\"ContactItem_ani9__7YH0A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3i1t6\",\"input\":\"Filter_input__pq8xA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"TotalNumber_wrap__3zW6G\",\"number\":\"TotalNumber_number__dZqbD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__Ug--Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__2izO7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__YU03o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Form_button__1Wmu3\",\"ani9\":\"Form_ani9__1DH91\",\"input\":\"Form_input__1K0ZQ\",\"label\":\"Form_label__u4SXX\"};","import PropTypes from 'prop-types';\nimport s from './ContactItem.module.css';\n\nconst ContactItem = ({ name, number, deleteContact }) => {\n  return (\n    <li className={s.item}>\n      <p>\n        {name}: {number}\n      </p>\n      <button className={s.button} onClick={deleteContact}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport s from './Loader.module.css';\n\nconst LoaderPage = () => {\n  return (\n    <div className={s.loader}>\n      <Loader\n        type=\"ThreeDots\"\n        color=\"#FF1493\"\n        height={80}\n        width={80}\n        timeout={2000}\n      />\n    </div>\n  );\n};\n\nexport default LoaderPage;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","import axios from 'axios';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n} from './contacts-actions';\n\naxios.defaults.baseURL = 'http://localhost:3000';\n\nexport const fetchContacts = () => dispatch => {\n  dispatch(fetchContactsRequest());\n\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n    .catch(error => dispatch(fetchContactsError(error)));\n};\n\nexport const addContact = contact => dispatch => {\n  dispatch(addContactRequest());\n\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error)));\n};\n\nexport const deleteContact = id => dispatch => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(deleteContactSuccess(id)))\n    .catch(error => dispatch(deleteContactError(error)));\n};\n","export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getIsLoading = state => state.isLoading;\n\nexport const filteredContacts = state => {\n  const contacts = getContacts(state);\n  console.log('contacts', contacts);\n  const filter = getFilter(state);\n  const normalizedContact = filter.toLowerCase();\n\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedContact),\n  );\n};\n","import PropTypes from 'prop-types';\nimport ContactItem from '../ContactItem/ContactItem';\nimport s from './ContactList.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport Loader from '../Loader/Loader';\nimport { deleteContact, fetchContacts } from '../../redux/contacts-operations';\nimport { filteredContacts, getIsLoading } from '../../redux/contacts-selectors';\n\nconst ContactsList = () => {\n  const contactsByFilter = useSelector(filteredContacts);\n  const loadingContacts = useSelector(getIsLoading);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const onDeleteContact = id => dispatch(deleteContact(id));\n\n  return (\n    <>\n      {loadingContacts && <Loader />}\n      {!loadingContacts && contactsByFilter && contactsByFilter.length > 0 ? (\n        <ul className={s.list}>\n          {contactsByFilter.map(({ id, name, number }) => (\n            <ContactItem\n              key={id}\n              name={name}\n              number={number}\n              deleteContact={() => onDeleteContact(id)}\n            />\n          ))}\n        </ul>\n      ) : null}\n    </>\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default ContactsList;\n","import React, { useState } from 'react';\nimport s from './Form.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from '../../redux/contacts-selectors';\nimport { addContact } from '../../redux/contacts-operations';\n\nexport default function Form() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const existNameHandler = existName => {\n    const nameHandler = existName.toLowerCase();\n    return contacts.find(({ name }) => name.toLowerCase() === nameHandler);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const sameName = existNameHandler(name);\n    const contact = { id: name, name, number };\n\n    if (sameName) {\n      alert(`${name} is already in your phonebook`);\n    } else {\n      dispatch(addContact({ name, number }));\n    }\n\n    if (contact === '') {\n      return alert('Enter values');\n    }\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={event => handleSubmit(event)}>\n      <label className={s.label} htmlFor={name}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          value={name}\n          name={'name'}\n          onChange={handleChange}\n          id={name}\n          placeholder=\"Enter contact name\"\n          required\n        />\n      </label>\n      <label className={s.label} htmlFor={number}>\n        Number\n        <input\n          className={s.input}\n          type=\"tel\"\n          name={'number'}\n          value={number}\n          onChange={handleChange}\n          id={number}\n          placeholder=\"Enter contact number\"\n          required\n        />\n      </label>\n      <button className={s.button} type=\"submit\">\n        Add the new contact\n      </button>\n    </form>\n  );\n}\n","import s from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/contacts-selectors';\nimport * as contactsActions from '../../redux/contacts-actions';\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <label className={s.label}>\n      Сontact search\n      <input\n        className={s.input}\n        type=\"text\"\n        placeholder=\"Search by name\"\n        value={value}\n        onChange={event =>\n          dispatch(contactsActions.changeFilter(event.target.value))\n        }\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport s from './TotalNumber.module.css';\n\nconst TotalNumber = ({ total }) => {\n  return (\n    <div className={s.wrap}>\n      <p className={s.number}>Number of contacts: {total}</p>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  total: state.contacts.items.length,\n});\n\nexport default connect(mapStateToProps)(TotalNumber);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      <div className={s.wrap}>\n        {title && <h2 className={s.title}>{title}</h2>}\n        {children}\n      </div>\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import React from 'react';\nimport ContactsList from './Components/ContactsList/ContactsList';\nimport Form from './Components/Form/Form';\nimport Filter from './Components/Filter/Filter';\nimport s from './App.module.css';\nimport TotalNumber from './Components/TotalNumber/TotalNumber';\nimport Section from './Components/Section/Section';\n\nfunction App() {\n  return (\n    <div className={s.container}>\n      <Section title=\"Phonebook\">\n        <Form />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        <TotalNumber />\n        <ContactsList />\n      </Section>\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n} from './contacts-actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n});\n","import contactsReducer from './contacts-reducer';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\n\nconst middleware = [...getDefaultMiddleware(), logger];\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}